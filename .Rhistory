dplyr::mutate(dat, year = year) %>%
dplyr::select(MONTH, year)
}, error = function(e) {
warning("invalid year: ", year)
return(NULL)
})
})
}
accidents <- fars_read_years(2014)
print(accidents)
make_filename <- function(year) {
year <- as.integer(year)
sprintf("accident_%d.csv.bz2", year)}
filename<-make_filename(2014)
print(filename)
fars_read <- function(filename) {
if(!file.exists(filename))
stop("file '", filename, "' does not exist")
data <- suppressMessages({
readr::read_csv(filename, progress = FALSE)
})
dplyr::tbl_df(data)
}
filepath <- system.file("extdata", filename, package = "farsfunctions")
accident_2014 <- fars_read(filepath)
fars_read_years <- function(years) {
lapply(years, function(year) {
file <- make_filename(year)
tryCatch({
dat <- fars_read(system.file("extdata", filename, package = "farsfunctions"))
dplyr::mutate(dat, year = year) %>%
dplyr::select(MONTH, year)
}, error = function(e) {
warning("invalid year: ", year)
return(NULL)
})
})
}
accidents <- fars_read_years(2014)
print(accidents)
fars_read_years <- function(years) {
lapply(years, function(year) {
file <- make_filename(year)
tryCatch({
dat <- fars_read(system.file("extdata", file, package = "farsfunctions"))
dplyr::mutate(dat, year = year) %>%
dplyr::select(MONTH, year)
}, error = function(e) {
warning("invalid year: ", year)
return(NULL)
})
})
}
accidents <- fars_read_years(2014)
print(accidents)
dat <- fars_read(system.file("extdata", file, package = "farsfunctions"))
document()
library(devtools)
document()
dat <- fars_read(system.file("extdata", file, package = "farsfunctions"))
make_filename <- function(year) {
year <- as.integer(year)
sprintf("accident_%d.csv.bz2", year)}
filename<-make_filename(2014)
print(filename)
fars_read <- function(filename) {
if(!file.exists(filename))
stop("file '", filename, "' does not exist")
data <- suppressMessages({
readr::read_csv(filename, progress = FALSE)
})
dplyr::tbl_df(data)
}
filepath <- system.file("extdata", filename, package = "farsfunctions")
accident_2014 <- fars_read(filepath)
print(head(accident_2014))
fars_read_years <- function(years) {
lapply(years, function(year) {
file <- make_filename(year)
tryCatch({
dat <- fars_read(system.file("extdata", file, package = "farsfunctions"))
dplyr::mutate(dat, year = year) %>%
dplyr::select(MONTH, year)
}, error = function(e) {
warning("invalid year: ", year)
return(NULL)
})
})
}
accidents <- fars_read_years(2014)
print(accidents)
fars_read_years(2014)
traceback()
fars_read_years(2013,2014)
fars_read_years <- function(years) {
lapply(years, function(year) {
file <- make_filename(year)
tryCatch({
dat <- fars_read(system.file("extdata", file, package = "farsfunctions"))
dplyr::mutate(dat, year = year) %>%
dplyr::select(MONTH, year)
}, error = function(e) {
warning("invalid year: ", year)
return(NULL)
traceback()
})
})
}
accidents <- fars_read_years(2014)
print(accidents)
fars_read_years <- function(years) {
lapply(years, function(year) {
file <- make_filename(year)
tryCatch({
dat <- fars_read(system.file("extdata", file, package = "farsfunctions"))
dplyr::mutate(dat, year = year) %>%
dplyr::select(MONTH, year)
}, error = function(e)
traceback()
)}
}
fars_read_years <- function(years) {
lapply(years, function(year) {
file <- make_filename(year)
tryCatch({
dat <- fars_read(system.file("extdata", file, package = "farsfunctions"))
dplyr::mutate(dat, year = year) %>%
dplyr::select(MONTH, year)
}, error = function(e)
traceback()
)}
)}
fars_read_years <- function(years) {
lapply(years, function(year) {
file <- make_filename(year)
tryCatch({
dat <- fars_read(system.file("extdata", file, package = "farsfunctions"))
dplyr::mutate(dat, year = year) %>%
dplyr::select(MONTH, year)
}
})
fars_read_years <- function(years) {
lapply(years, function(year) {
file <- make_filename(year)
tryCatch({
dat <- fars_read(system.file("extdata", file, package = "farsfunctions"))
dplyr::mutate(dat, year = year) %>%
dplyr::select(MONTH, year)
})
}
accidents <- fars_read_years(2014)
fars_read_years <- function(years) {
lapply(years, function(year) {
file <- make_filename(year)
tryCatch({
dat <- fars_read(system.file("extdata", file, package = "farsfunctions"))
dplyr::mutate(dat, year = year) %>%
dplyr::select(MONTH, year)
})
accidents <- fars_read_years(2014)
print(accidents)
fars_read_years <- function(years) {
lapply(years, function(year) {
file <- make_filename(year)
tryCatch({
dat <- fars_read(system.file("extdata", file, package = "farsfunctions"))
dplyr::mutate(dat, year = year) %>%
dplyr::select(MONTH, year)
}, error = function(e) {
warning("invalid year: ", year)
return(NULL)
})
})
}
accidents <- fars_read_years(2014)
print(accidents)
file <- make_filename(year)
tryCatch({
dat <- fars_read(system.file("extdata", file, package = "farsfunctions"))
dplyr::mutate(dat, year = year) %>%
dplyr::select(MONTH, year)
}, error = function(e) {
warning("invalid year: ", year)
return(NULL)
})
year<-2014
file <- make_filename(year)
tryCatch({
dat <- fars_read(system.file("extdata", file, package = "farsfunctions"))
dplyr::mutate(dat, year = year) %>%
dplyr::select(MONTH, year)
}, error = function(e) {
warning("invalid year: ", year)
return(NULL)
})
tryCatch({
dat <- fars_read(system.file("extdata", file, package = "farsfunctions"))
dplyr::mutate(dat, year = year) %>%
dplyr::select(MONTH, year)
}, error = function(e) {
warning("invalid year: ", year)
return(NULL)
})
tryCatch({
dplyr::mutate(dat, year = year) %>%
dplyr::select(MONTH, year)
}, error = function(e) {
warning("invalid year: ", year)
return(NULL)
})
View(dat)
+     dplyr::mutate(dat, year = year) %>%
+         dplyr::select(MONTH, year)
dplyr::mutate(dat, year = year) %>%
dplyr::select(MONTH, year)
library(dplyr)
dplyr::mutate(dat, year = year) %>%
dplyr::select(MONTH, year)
document()
fars_read_years <- function(years) {
lapply(years, function(year) {
file <- make_filename(year)
tryCatch({
dat <- fars_read(system.file("extdata", file, package = "farsfunctions"))
dplyr::mutate(dat, year = year) %>%
dplyr::select(MONTH, year)
}, error = function(e) {
warning("invalid year: ", year)
return(NULL)
})
})
}
accidents <- fars_read_years(2014)
print(accidents)
make_filename <- function(year) {
year <- as.integer(year)
sprintf("accident_%d.csv.bz2", year)}
filename<-make_filename(2014)
print(filename)
fars_read <- function(filename) {
if(!file.exists(filename))
stop("file '", filename, "' does not exist")
data <- suppressMessages({
readr::read_csv(filename, progress = FALSE)
})
dplyr::tbl_df(data)
}
filepath <- system.file("extdata", filename, package = "farsfunctions")
accident_2014 <- fars_read(filepath)
print(head(accident_2014))
fars_read_years <- function(years) {
lapply(years, function(year) {
file <- make_filename(year)
tryCatch({
dat <- fars_read(system.file("extdata", file, package = "farsfunctions"))
dplyr::mutate(dat, year = year) %>%
dplyr::select(MONTH, year)
}, error = function(e) {
warning("invalid year: ", year)
return(NULL)
})
})
}
accidents <- fars_read_years(2014)
print(accidents)
fars_summarize_years <- function(years) {
dat_list <- fars_read_years(years)
dplyr::bind_rows(dat_list) %>%
dplyr::group_by(year, MONTH) %>%
dplyr::summarize(n = n()) %>%
tidyr::spread(year, n)
}
summary <- fars_summarize_years(2013:2015)
print(summary)
make_filename <- function(year) {
year <- as.integer(year)
sprintf("accident_%d.csv.bz2", year)}
filename<-make_filename(2014)
print(filename)
fars_read <- function(filename) {
if(!file.exists(filename))
stop("file '", filename, "' does not exist")
data <- suppressMessages({
readr::read_csv(filename, progress = FALSE)
})
dplyr::tbl_df(data)
}
filepath <- system.file("extdata", filename, package = "farsfunctions")
accident_2014 <- fars_read(filepath)
print(head(accident_2014))
fars_read_years <- function(years) {
lapply(years, function(year) {
file <- make_filename(year)
tryCatch({
dat <- fars_read(system.file("extdata", file, package = "farsfunctions"))
dplyr::mutate(dat, year = year) %>%
dplyr::select(MONTH, year)
}, error = function(e) {
warning("invalid year: ", year)
return(NULL)
})
})
}
accidents <- fars_read_years(2014)
print(accidents)
fars_summarize_years <- function(years) {
dat_list <- fars_read_years(years)
dplyr::bind_rows(dat_list) %>%
dplyr::group_by(year, MONTH) %>%
dplyr::summarize(n = n()) %>%
tidyr::spread(year, n)
}
summary <- fars_summarize_years(2013:2015)
print(summary)
fars_map_state <- function(state.num, year) {
filename <- make_filename(year)
data <- fars_read(filename)
state.num <- as.integer(state.num)
if(!(state.num %in% unique(data$STATE)))
stop("invalid STATE number: ", state.num)
data.sub <- dplyr::filter(data, STATE == state.num)
if(nrow(data.sub) == 0L) {
message("no accidents to plot")
return(invisible(NULL))
}
is.na(data.sub$LONGITUD) <- data.sub$LONGITUD > 900
is.na(data.sub$LATITUDE) <- data.sub$LATITUDE > 90
with(data.sub, {
maps::map("state", ylim = range(LATITUDE, na.rm = TRUE),
xlim = range(LONGITUD, na.rm = TRUE))
graphics::points(LONGITUD, LATITUDE, pch = 46)
})
}
fars_map_state(1, 2014)
fars_map_state <- function(state.num, year) {
filename <- make_filename(year)
data <- fars_read(system.file("extdata", file, package = "farsfunctions"))
state.num <- as.integer(state.num)
if(!(state.num %in% unique(data$STATE)))
stop("invalid STATE number: ", state.num)
data.sub <- dplyr::filter(data, STATE == state.num)
if(nrow(data.sub) == 0L) {
message("no accidents to plot")
return(invisible(NULL))
}
is.na(data.sub$LONGITUD) <- data.sub$LONGITUD > 900
is.na(data.sub$LATITUDE) <- data.sub$LATITUDE > 90
with(data.sub, {
maps::map("state", ylim = range(LATITUDE, na.rm = TRUE),
xlim = range(LONGITUD, na.rm = TRUE))
graphics::points(LONGITUD, LATITUDE, pch = 46)
})
}
fars_map_state(1, 2014)
library(maps)
download.packages(maps)
??graphics
?graphics
library(maps)
libpath()
.libPaths()
library(maps)
download.packages("maps","graphics")
download.packages(maps)
install.packages(maps,graphics)
install.packages("maps")
install.packages("graphics")
install.packages("graphics")
install.packages("graphics")
library(maps)
document()
library(devtools)
document()
fars_map_state <- function(state.num, year) {
filename <- make_filename(year)
data <- fars_read(system.file("extdata", file, package = "farsfunctions"))
state.num <- as.integer(state.num)
if(!(state.num %in% unique(data$STATE)))
stop("invalid STATE number: ", state.num)
data.sub <- dplyr::filter(data, STATE == state.num)
if(nrow(data.sub) == 0L) {
message("no accidents to plot")
return(invisible(NULL))
}
is.na(data.sub$LONGITUD) <- data.sub$LONGITUD > 900
is.na(data.sub$LATITUDE) <- data.sub$LATITUDE > 90
with(data.sub, {
maps::map("state", ylim = range(LATITUDE, na.rm = TRUE),
xlim = range(LONGITUD, na.rm = TRUE))
graphics::points(LONGITUD, LATITUDE, pch = 46)
})
}
fars_map_state(1, 2014)
document()
fars_read <- function(filename) {
if(!file.exists(filename))
stop("file '", filename, "' does not exist")
data <- suppressMessages({
readr::read_csv(filename, progress = FALSE)
})
dplyr::tbl_df(data)
}
filepath <- system.file("extdata", filename, package = "farsfunctions")
accident_2014 <- fars_read(filepath)
print(head(accident_2014))
rm("filename")
fars_read <- function(filename) {
if(!file.exists(filename))
stop("file '", filename, "' does not exist")
data <- suppressMessages({
readr::read_csv(filename, progress = FALSE)
})
dplyr::tbl_df(data)
}
filepath <- system.file("extdata", filename, package = "farsfunctions")
make_filename <- function(year) {
year <- as.integer(year)
sprintf("accident_%d.csv.bz2", year)}
filename<-make_filename(2014)
print(filename)
fars_read <- function(filename) {
if(!file.exists(filename))
stop("file '", filename, "' does not exist")
data <- suppressMessages({
readr::read_csv(filename, progress = FALSE)
})
dplyr::tbl_df(data)
}
filepath <- system.file("extdata", filename, package = "farsfunctions")
accident_2014 <- fars_read(filepath)
print(head(accident_2014))
install.packages("testthat")
document()
?test_check
??test_check
create("testthat")
fars_map_state <- function(state.num, year) {
filename <- make_filename(year)
data <- fars_read(system.file("extdata", file, package = "farsfunctions"))
state.num <- as.integer(state.num)
if(!(state.num %in% unique(data$STATE)))
stop("invalid STATE number: ", state.num)
data.sub <- dplyr::filter(data, STATE == state.num)
if(nrow(data.sub) == 0L) {
message("no accidents to plot")
return(invisible(NULL))
}
is.na(data.sub$LONGITUD) <- data.sub$LONGITUD > 900
is.na(data.sub$LATITUDE) <- data.sub$LATITUDE > 90
with(data.sub, {
maps::map("state", ylim = range(LATITUDE, na.rm = TRUE),
xlim = range(LONGITUD, na.rm = TRUE))
graphics::points(LONGITUD, LATITUDE, pch = 46)
})
}
fars_map_state(1, 2014)
library(devtools)
use_travis()
document()
document()
library(devtools)
document()
fars_read <- function(filename) {
if(!file.exists(filename))
stop("file '", filename, "' does not exist")
data <- suppressMessages({
readr::read_csv(filename, progress = FALSE)
})
dplyr::tbl_df(data)
}
filepath <- system.file("extdata", filename, package = "farsfunctions")
accident_2014 <- fars_read(filepath)
print(head(accident_2014))
fars_summarize_years <- function(years) {
dat_list <- fars_read_years(years)
dplyr::bind_rows(dat_list) %>%
dplyr::group_by(year, MONTH) %>%
dplyr::summarize(n = n()) %>%
tidyr::spread(year, n)
}
summary <- fars_summarize_years(2013:2015)
library(dplyr)
document()
fars_summarize_years <- function(years) {
dat_list <- fars_read_years(years)
dplyr::bind_rows(dat_list) %>%
dplyr::group_by(year, MONTH) %>%
dplyr::summarize(n = n()) %>%
tidyr::spread(year, n)
}
summary <- fars_summarize_years(2013:2015)
print(summary)
fars_map_state <- function(state.num, year) {
filename <- make_filename(year)
data <- fars_read(system.file("extdata", file, package = "farsfunctions"))
state.num <- as.integer(state.num)
if(!(state.num %in% unique(data$STATE)))
stop("invalid STATE number: ", state.num)
data.sub <- dplyr::filter(data, STATE == state.num)
if(nrow(data.sub) == 0L) {
message("no accidents to plot")
return(invisible(NULL))
}
is.na(data.sub$LONGITUD) <- data.sub$LONGITUD > 900
is.na(data.sub$LATITUDE) <- data.sub$LATITUDE > 90
with(data.sub, {
maps::map("state", ylim = range(LATITUDE, na.rm = TRUE),
xlim = range(LONGITUD, na.rm = TRUE))
graphics::points(LONGITUD, LATITUDE, pch = 46)
})
}
fars_map_state(1, 2014)
